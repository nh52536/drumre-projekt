{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabijan\\\\Documents\\\\drumre-projekt\\\\front\\\\src\\\\Components\\\\Playlist.js\",\n  _s = $RefreshSig$();\n// Playlist.js\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Playlist.css\";\nimport { doc, setDoc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  username\n}) {\n  _s();\n  const [playlistItems, setPlaylistItems] = useState([]);\n  const [playlist, setPlaylist] = useState(false);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [displayPlay, setDisplay] = useState(true);\n  const [selectedArtistInfo, setSelectedArtistInfo] = useState(null);\n  const [showArtistInfo, setShowArtistInfo] = useState(false);\n  const [isLiked, setIsLiked] = useState(true);\n  const [trackNameLiked, setTrackNameLiked] = useState([]);\n  const [selectedSongs, setSelectedSongs] = useState([]);\n  const [authorTrack, setAuthorTrack] = useState([]);\n  const [displaySearch, setDisplaySearch] = useState(true);\n  const [inputValue, setInputValue] = useState('');\n  const [displayX, setDisplayX] = useState(true);\n  useEffect(() => {\n    // TODO: call an axios message to get all the songs from the database for the user logged in\n    let response = axios.get(\"http://localhost:8080/likedSongs\", {\n      \"username\": \"\",\n      \"playlistId\": {\n        \"creatorUsername\": \"\",\n        \"playListName\": \"\"\n      }\n    });\n    console.log(response);\n    // TODO add response songs to selectedSongs\n    console.log(selectedSongs);\n  }, [selectedSongs]);\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n  const [email, setEmail] = useState(window.localStorage.getItem(\"email\"));\n  const renderPlaylist = () => {\n    return playlistItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-track-count\",\n          children: [\"Number of tracks in playlist: \", item.tracks.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getTracks(item.id),\n        children: \"See Tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this));\n  };\n  const getTracks = async playlistId => {\n    let token = window.localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    setPlaylistTracks(data.items);\n    setSelectedPlaylist(playlistId);\n  };\n  const renderTracks = () => {\n    return playlistTracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: track.track.album.images[0].url,\n        alt: `${track.track.name} Album Cover`,\n        className: \"track-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-name\",\n          children: track.track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-artist\",\n          children: [\"Artist: \", track.track.artists[0].name, !selectedSongs.includes(track.track.id) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"heart-button\",\n            onClick: () => addToSelectedSongs(track.track.id),\n            children: \"\\u2764\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), selectedSongs.includes(track.track.id) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"heart-button\",\n            onClick: () => removeFromSelectedSongs(track.track.id),\n            children: \"\\u2764\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, track.track.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this));\n  };\n  function addToSelectedSongs(songId) {\n    //TODO : call an axios message to save to database\n    if (!selectedSongs.includes(songId)) {\n      setSelectedSongs([...selectedSongs, songId]);\n    }\n    let response = axios.post(\"http://localhost:8080/addToPlaylist\", {\n      \"song\": {\n        \"songId\": \"\",\n        \"authorId\": \"\",\n        \"popularity\": 3\n      },\n      \"username\": \"user1\",\n      \"playlistId\": {\n        \"creatorUsername\": \"\",\n        \"playListName\": \"\"\n      }\n    });\n  }\n  function removeFromSelectedSongs(songId) {\n    //TODO : call an axios message to remove from database\n    if (selectedSongs.includes(songId)) {\n      setSelectedSongs(selectedSongs.filter(id => id !== songId));\n    }\n    let response = axios.delete(\"http://localhost:8080/deleteFromPlaylist\", {\n      \"username\": \"user1\",\n      \"playlistId\": {\n        \"creatorUsername\": \"\",\n        \"playListName\": \"\"\n      },\n      \"songId\": \"\"\n    });\n  }\n  const renderAuthorTracks = () => {\n    return authorTrack.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: track.album.images[0].url,\n        alt: `${track.name} Album Cover`,\n        className: \"track-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-name\",\n          children: track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-artist\",\n          children: [track.artists[0].name, !selectedSongs.includes(track.id) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"heart-button\",\n            onClick: () => addToSelectedSongs(track.id),\n            children: \"\\u2764\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), selectedSongs.includes(track.id) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"heart-button\",\n            onClick: () => removeFromSelectedSongs(track.id),\n            children: \"\\u2764\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, track.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this));\n  };\n  const getPlaylist = async e => {\n    e.preventDefault();\n    let token = window.localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    setPlaylistItems(data.items);\n    setPlaylist(true);\n    setDisplay(false);\n  };\n  const getSongsFromArtist = async e => {\n    e.preventDefault();\n    let token = window.localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/search?type=track&q=\" + inputValue + \"&limit=50\", {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    console.log(data.tracks.items);\n    setAuthorTrack(data.tracks.items);\n  };\n  const closeAll = async e => {\n    e.preventDefault();\n    setDisplay(true);\n    setSelectedPlaylist(null);\n    setSelectedArtistInfo(null);\n    setPlaylist(false);\n    setSelectedPlaylist(null);\n    setShowArtistInfo(false);\n    setPlaylistItems([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-container\",\n    children: [!displayPlay && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"get-playlist-button-close\",\n      onClick: closeAll,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderPlaylist()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), selectedPlaylist !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Tracks of \", selectedPlaylist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderTracks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this), displayPlay && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"get-playlist-button\",\n      onClick: getPlaylist,\n      children: \"GET YOUR PLAYLIST FROM SPOTIFY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this), displaySearch && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"textInput\",\n        children: \"Enter Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"textInput\",\n        value: inputValue,\n        onChange: handleChange,\n        placeholder: \"Type something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: inputValue.length == 0,\n        onClick: getSongsFromArtist,\n        children: \"SEARCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), authorTrack !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Tracks of \", selectedPlaylist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderAuthorTracks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n}\n_s(Playlist, \"MDDT8Iesqs61FzcWbpH6eybCUgE=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","doc","setDoc","deleteDoc","db","jsxDEV","_jsxDEV","Playlist","username","_s","playlistItems","setPlaylistItems","playlist","setPlaylist","playlistTracks","setPlaylistTracks","selectedPlaylist","setSelectedPlaylist","displayPlay","setDisplay","selectedArtistInfo","setSelectedArtistInfo","showArtistInfo","setShowArtistInfo","isLiked","setIsLiked","trackNameLiked","setTrackNameLiked","selectedSongs","setSelectedSongs","authorTrack","setAuthorTrack","displaySearch","setDisplaySearch","inputValue","setInputValue","displayX","setDisplayX","response","get","console","log","handleChange","e","target","value","email","setEmail","window","localStorage","getItem","renderPlaylist","map","item","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","tracks","total","onClick","getTracks","id","playlistId","token","data","headers","Authorization","items","renderTracks","track","src","album","images","url","alt","artists","includes","addToSelectedSongs","removeFromSelectedSongs","songId","post","filter","delete","renderAuthorTracks","getPlaylist","preventDefault","getSongsFromArtist","closeAll","htmlFor","type","onChange","placeholder","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/Fabijan/Documents/drumre-projekt/front/src/Components/Playlist.js"],"sourcesContent":["// Playlist.js\r\n\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Playlist.css\";\r\nimport {doc, setDoc, deleteDoc} from \"firebase/firestore\";\r\nimport {db} from \"../firebase\";\r\n\r\nfunction Playlist({username}) {\r\n    const [playlistItems, setPlaylistItems] = useState([]);\r\n    const [playlist, setPlaylist] = useState(false);\r\n    const [playlistTracks, setPlaylistTracks] = useState([]);\r\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n    const [displayPlay, setDisplay] = useState(true);\r\n    const [selectedArtistInfo, setSelectedArtistInfo] = useState(null);\r\n    const [showArtistInfo, setShowArtistInfo] = useState(false);\r\n    const [isLiked, setIsLiked] = useState(true);\r\n    const [trackNameLiked, setTrackNameLiked] = useState([]);\r\n    const [selectedSongs, setSelectedSongs] = useState([]);\r\n    const [authorTrack, setAuthorTrack] = useState([]);\r\n    const [displaySearch, setDisplaySearch] = useState(true);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [displayX, setDisplayX] = useState(true);\r\n    useEffect(() => {\r\n        // TODO: call an axios message to get all the songs from the database for the user logged in\r\n        let response = axios.get(\"http://localhost:8080/likedSongs\",{\"username\": \"\",\"playlistId\" : {\"creatorUsername\" : \"\", \"playListName\" : \"\"}})\r\n        console.log(response)\r\n        // TODO add response songs to selectedSongs\r\n        console.log(selectedSongs)\r\n    }, [selectedSongs]);\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const [email, setEmail] = useState(window.localStorage.getItem(\"email\"));\r\n    const renderPlaylist = () => {\r\n        return playlistItems.map((item) => (\r\n            <div key={item.id} className=\"playlist-item\">\r\n                <div className=\"playlist-info\">\r\n                    <div className=\"playlist-name\">{item.name}</div>\r\n                    <div className=\"playlist-track-count\">\r\n                        Number of tracks in playlist: {item.tracks.total}\r\n                    </div>\r\n                </div>\r\n                <button onClick={() => getTracks(item.id)}>See Tracks</button>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const getTracks = async (playlistId) => {\r\n        let token = window.localStorage.getItem(\"token\");\r\n        const {data} = await axios.get(\r\n            `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\r\n            {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                },\r\n            }\r\n        );\r\n        setPlaylistTracks(data.items);\r\n        setSelectedPlaylist(playlistId);\r\n    };\r\n\r\n\r\n\r\n    const renderTracks = () => {\r\n        return playlistTracks.map((track) => (\r\n            <div key={track.track.id} className=\"track-item\">\r\n                <img\r\n                    src={track.track.album.images[0].url}\r\n                    alt={`${track.track.name} Album Cover`}\r\n                    className=\"track-image\"\r\n                />\r\n                <div className=\"track-info\">\r\n                    <div className=\"track-name\">{track.track.name}</div>\r\n                    <div className=\"track-artist\">\r\n                        Artist: {track.track.artists[0].name}\r\n                        {!selectedSongs.includes(track.track.id) && (\r\n                            <button className=\"heart-button\" onClick={() => addToSelectedSongs(track.track.id)}>\r\n                                ❤\r\n                            </button>\r\n                        )}\r\n                        {selectedSongs.includes(track.track.id) && (\r\n                            <button className=\"heart-button\" onClick={() => removeFromSelectedSongs(track.track.id)}>\r\n                                ❤️\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    function addToSelectedSongs(songId) {\r\n        //TODO : call an axios message to save to database\r\n        if (!selectedSongs.includes(songId)) {\r\n            setSelectedSongs([...selectedSongs, songId]);\r\n        }\r\n\r\n        let response = axios.post(\"http://localhost:8080/addToPlaylist\",{\"song\" : {\"songId\" : \"\", \"authorId\" : \"\",\"popularity\": 3},\"username\" : \"user1\", \"playlistId\" : {\"creatorUsername\" : \"\", \"playListName\" : \"\"}})\r\n    }\r\n\r\n    function removeFromSelectedSongs(songId) {\r\n        //TODO : call an axios message to remove from database\r\n        if (selectedSongs.includes(songId)) {\r\n            setSelectedSongs(selectedSongs.filter((id) => id !== songId));\r\n        }\r\n        let response = axios.delete(\"http://localhost:8080/deleteFromPlaylist\",{\"username\" : \"user1\", \"playlistId\" : {\"creatorUsername\" : \"\", \"playListName\" : \"\"}, \"songId\" : \"\"})\r\n\r\n    }\r\n\r\n    const renderAuthorTracks = () => {\r\n        return authorTrack.map((track) => (\r\n            <div key={track.id} className=\"track-item\">\r\n                <img\r\n                    src={track.album.images[0].url}\r\n                    alt={`${track.name} Album Cover`}\r\n                    className=\"track-image\"\r\n                />\r\n                <div className=\"track-info\">\r\n                    <div className=\"track-name\">{track.name}</div>\r\n                    <div className=\"track-artist\">{track.artists[0].name}\r\n                        {!selectedSongs.includes(track.id) && (\r\n                            <button className=\"heart-button\" onClick={() => addToSelectedSongs(track.id)}>\r\n                                ❤\r\n                            </button>\r\n                        )}\r\n                        {selectedSongs.includes(track.id) && (\r\n                            <button className=\"heart-button\" onClick={() => removeFromSelectedSongs(track.id)}>\r\n                                ❤️\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n\r\n\r\n    const getPlaylist = async (e) => {\r\n        e.preventDefault();\r\n        let token = window.localStorage.getItem(\"token\");\r\n        const {data} = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        });\r\n        setPlaylistItems(data.items);\r\n        setPlaylist(true);\r\n        setDisplay(false);\r\n    };\r\n\r\n    const getSongsFromArtist = async (e) => {\r\n        e.preventDefault();\r\n        let token = window.localStorage.getItem(\"token\");\r\n        const {data} = await axios.get(\"https://api.spotify.com/v1/search?type=track&q=\" + inputValue + \"&limit=50\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token,\r\n            }\r\n        });\r\n        console.log(data.tracks.items);\r\n        setAuthorTrack(data.tracks.items);\r\n    };\r\n\r\n    const closeAll = async (e) => {\r\n        e.preventDefault();\r\n        setDisplay(true);\r\n        setSelectedPlaylist(null);\r\n        setSelectedArtistInfo(null);\r\n        setPlaylist(false);\r\n        setSelectedPlaylist(null);\r\n        setShowArtistInfo(false);\r\n        setPlaylistItems([]);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"playlist-container\">\r\n            {!displayPlay && (\r\n                <button className=\"get-playlist-button-close\" onClick={closeAll}>\r\n                    X\r\n                </button>\r\n            )}\r\n            <div>{renderPlaylist()}</div>\r\n            {selectedPlaylist !== null && (\r\n                <div>\r\n                    <h3>Tracks of {selectedPlaylist}</h3>\r\n                    <div>{renderTracks()}</div>\r\n                </div>\r\n            )}\r\n            {displayPlay && (\r\n                <button className=\"get-playlist-button\" onClick={getPlaylist}>\r\n                    GET YOUR PLAYLIST FROM SPOTIFY\r\n                </button>\r\n            )}\r\n\r\n            {displaySearch && (\r\n\r\n                <div>\r\n\r\n                    <label htmlFor=\"textInput\">Enter Text:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"textInput\"\r\n                        value={inputValue}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Type something...\"\r\n                    />\r\n                    <button disabled={inputValue.length == 0} onClick={getSongsFromArtist}>SEARCH</button>\r\n                 \r\n                    {authorTrack !== null && (\r\n                        <div>\r\n                            <h3>Tracks of {selectedPlaylist}</h3>\r\n                            <div>{renderAuthorTracks()}</div>\r\n                        </div>\r\n                    )} </div>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playlist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
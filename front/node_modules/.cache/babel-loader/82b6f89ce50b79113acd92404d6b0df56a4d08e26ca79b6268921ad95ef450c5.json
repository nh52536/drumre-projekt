{"ast":null,"code":"// Playlist.js\nimport React,{useEffect,useRef,useState}from\"react\";import axios from\"axios\";import\"./Playlist.css\";import{doc,setDoc,deleteDoc}from\"firebase/firestore\";import{db}from\"../firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Playlist(_ref){let{username}=_ref;const[playlistItems,setPlaylistItems]=useState([]);const[playlist,setPlaylist]=useState(false);const[playlistTracks,setPlaylistTracks]=useState([]);const[selectedPlaylist,setSelectedPlaylist]=useState(null);const[displayPlay,setDisplay]=useState(true);const[selectedArtistInfo,setSelectedArtistInfo]=useState(null);const[showArtistInfo,setShowArtistInfo]=useState(false);const[isLiked,setIsLiked]=useState(true);const[trackNameLiked,setTrackNameLiked]=useState([]);const[selectedSongs,setSelectedSongs]=useState([]);const[authorTrack,setAuthorTrack]=useState([]);const[displaySearch,setDisplaySearch]=useState(true);const[inputValue,setInputValue]=useState('');const[displayX,setDisplayX]=useState(true);useEffect(()=>{// TODO: call an axios message to get all the songs from the database for the user logged in\nlet response=axios.get(\"http://localhost:8080/likedSongs\",{\"username\":\"\",\"playlistId\":{\"creatorUsername\":\"\",\"playListName\":\"\"}});console.log(response);// TODO add response songs to selectedSongs\nconsole.log(selectedSongs);},[selectedSongs]);const handleChange=e=>{setInputValue(e.target.value);};const[email,setEmail]=useState(window.localStorage.getItem(\"email\"));const renderPlaylist=()=>{return playlistItems.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"playlist-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"playlist-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"playlist-name\",children:item.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"playlist-track-count\",children:[\"Number of tracks in playlist: \",item.tracks.total]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>getTracks(item.id),children:\"See Tracks\"})]},item.id));};const getTracks=async playlistId=>{let token=window.localStorage.getItem(\"token\");const{data}=await axios.get(\"https://api.spotify.com/v1/playlists/\".concat(playlistId,\"/tracks\"),{headers:{Authorization:\"Bearer \"+token}});setPlaylistTracks(data.items);setSelectedPlaylist(playlistId);};const renderTracks=()=>{return playlistTracks.map(track=>/*#__PURE__*/_jsxs(\"div\",{className:\"track-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:track.track.album.images[0].url,alt:\"\".concat(track.track.name,\" Album Cover\"),className:\"track-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"track-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"track-name\",children:track.track.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"track-artist\",children:[\"Artist: \",track.track.artists[0].name,!selectedSongs.includes(track.track.id)&&/*#__PURE__*/_jsx(\"button\",{className:\"heart-button\",onClick:()=>addToSelectedSongs(track.track.id),children:\"\\u2764\"}),selectedSongs.includes(track.track.id)&&/*#__PURE__*/_jsx(\"button\",{className:\"heart-button\",onClick:()=>removeFromSelectedSongs(track.track.id),children:\"\\u2764\\uFE0F\"})]})]})]},track.track.id));};function addToSelectedSongs(songId){//TODO : call an axios message to save to database\nif(!selectedSongs.includes(songId)){setSelectedSongs([...selectedSongs,songId]);}let response=axios.post(\"http://localhost:8080/addToPlaylist\",{\"song\":{\"songId\":\"\",\"authorId\":\"\",\"popularity\":3},\"username\":\"user1\",\"playlistId\":{\"creatorUsername\":\"\",\"playListName\":\"\"}});}function removeFromSelectedSongs(songId){//TODO : call an axios message to remove from database\nif(selectedSongs.includes(songId)){setSelectedSongs(selectedSongs.filter(id=>id!==songId));}let response=axios.delete(\"http://localhost:8080/deleteFromPlaylist\",{\"username\":\"user1\",\"playlistId\":{\"creatorUsername\":\"\",\"playListName\":\"\"},\"songId\":\"\"});}const renderAuthorTracks=()=>{return authorTrack.map(track=>/*#__PURE__*/_jsxs(\"div\",{className:\"track-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:track.album.images[0].url,alt:\"\".concat(track.name,\" Album Cover\"),className:\"track-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"track-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"track-name\",children:track.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"track-artist\",children:[track.artists[0].name,!selectedSongs.includes(track.id)&&/*#__PURE__*/_jsx(\"button\",{className:\"heart-button\",onClick:()=>addToSelectedSongs(track.id),children:\"\\u2764\"}),selectedSongs.includes(track.id)&&/*#__PURE__*/_jsx(\"button\",{className:\"heart-button\",onClick:()=>removeFromSelectedSongs(track.id),children:\"\\u2764\\uFE0F\"})]})]})]},track.id));};const getPlaylist=async e=>{e.preventDefault();let token=window.localStorage.getItem(\"token\");const{data}=await axios.get(\"https://api.spotify.com/v1/me/playlists\",{headers:{Authorization:\"Bearer \"+token}});setPlaylistItems(data.items);setPlaylist(true);setDisplay(false);};const getSongsFromArtist=async e=>{e.preventDefault();let token=window.localStorage.getItem(\"token\");const{data}=await axios.get(\"https://api.spotify.com/v1/search?type=track&q=\"+inputValue+\"&limit=50\",{headers:{Authorization:\"Bearer \"+token}});console.log(data.tracks.items);setAuthorTrack(data.tracks.items);};const closeAll=async e=>{e.preventDefault();setDisplay(true);setSelectedPlaylist(null);setSelectedArtistInfo(null);setPlaylist(false);setSelectedPlaylist(null);setShowArtistInfo(false);setPlaylistItems([]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"playlist-container\",children:[!displayPlay&&/*#__PURE__*/_jsx(\"button\",{className:\"get-playlist-button-close\",onClick:closeAll,children:\"X\"}),/*#__PURE__*/_jsx(\"div\",{children:renderPlaylist()}),selectedPlaylist!==null&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Tracks of \",selectedPlaylist]}),/*#__PURE__*/_jsx(\"div\",{children:renderTracks()})]}),displayPlay&&/*#__PURE__*/_jsx(\"button\",{className:\"get-playlist-button\",onClick:getPlaylist,children:\"GET YOUR PLAYLIST FROM SPOTIFY\"}),displaySearch&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"textInput\",children:\"Enter Text:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"textInput\",value:inputValue,onChange:handleChange,placeholder:\"Type something...\"}),/*#__PURE__*/_jsx(\"button\",{disabled:inputValue.length==0,onClick:getSongsFromArtist,children:\"SEARCH\"}),authorTrack!==null&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Tracks of \",selectedPlaylist]}),/*#__PURE__*/_jsx(\"div\",{children:renderAuthorTracks()})]}),\" \"]})]});}export default Playlist;","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","doc","setDoc","deleteDoc","db","jsx","_jsx","jsxs","_jsxs","Playlist","_ref","username","playlistItems","setPlaylistItems","playlist","setPlaylist","playlistTracks","setPlaylistTracks","selectedPlaylist","setSelectedPlaylist","displayPlay","setDisplay","selectedArtistInfo","setSelectedArtistInfo","showArtistInfo","setShowArtistInfo","isLiked","setIsLiked","trackNameLiked","setTrackNameLiked","selectedSongs","setSelectedSongs","authorTrack","setAuthorTrack","displaySearch","setDisplaySearch","inputValue","setInputValue","displayX","setDisplayX","response","get","console","log","handleChange","e","target","value","email","setEmail","window","localStorage","getItem","renderPlaylist","map","item","className","children","name","tracks","total","onClick","getTracks","id","playlistId","token","data","concat","headers","Authorization","items","renderTracks","track","src","album","images","url","alt","artists","includes","addToSelectedSongs","removeFromSelectedSongs","songId","post","filter","delete","renderAuthorTracks","getPlaylist","preventDefault","getSongsFromArtist","closeAll","htmlFor","type","onChange","placeholder","disabled","length"],"sources":["C:/Users/Fabijan/Documents/drumre-projekt/front/src/Components/Playlist.js"],"sourcesContent":["// Playlist.js\r\n\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Playlist.css\";\r\nimport {doc, setDoc, deleteDoc} from \"firebase/firestore\";\r\nimport {db} from \"../firebase\";\r\n\r\nfunction Playlist({username}) {\r\n    const [playlistItems, setPlaylistItems] = useState([]);\r\n    const [playlist, setPlaylist] = useState(false);\r\n    const [playlistTracks, setPlaylistTracks] = useState([]);\r\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n    const [displayPlay, setDisplay] = useState(true);\r\n    const [selectedArtistInfo, setSelectedArtistInfo] = useState(null);\r\n    const [showArtistInfo, setShowArtistInfo] = useState(false);\r\n    const [isLiked, setIsLiked] = useState(true);\r\n    const [trackNameLiked, setTrackNameLiked] = useState([]);\r\n    const [selectedSongs, setSelectedSongs] = useState([]);\r\n    const [authorTrack, setAuthorTrack] = useState([]);\r\n    const [displaySearch, setDisplaySearch] = useState(true);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [displayX, setDisplayX] = useState(true);\r\n    useEffect(() => {\r\n        // TODO: call an axios message to get all the songs from the database for the user logged in\r\n        let response = axios.get(\"http://localhost:8080/likedSongs\",{\"username\": \"\",\"playlistId\" : {\"creatorUsername\" : \"\", \"playListName\" : \"\"}})\r\n        console.log(response)\r\n        // TODO add response songs to selectedSongs\r\n        console.log(selectedSongs)\r\n    }, [selectedSongs]);\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const [email, setEmail] = useState(window.localStorage.getItem(\"email\"));\r\n    const renderPlaylist = () => {\r\n        return playlistItems.map((item) => (\r\n            <div key={item.id} className=\"playlist-item\">\r\n                <div className=\"playlist-info\">\r\n                    <div className=\"playlist-name\">{item.name}</div>\r\n                    <div className=\"playlist-track-count\">\r\n                        Number of tracks in playlist: {item.tracks.total}\r\n                    </div>\r\n                </div>\r\n                <button onClick={() => getTracks(item.id)}>See Tracks</button>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const getTracks = async (playlistId) => {\r\n        let token = window.localStorage.getItem(\"token\");\r\n        const {data} = await axios.get(\r\n            `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\r\n            {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                },\r\n            }\r\n        );\r\n        setPlaylistTracks(data.items);\r\n        setSelectedPlaylist(playlistId);\r\n    };\r\n\r\n\r\n\r\n    const renderTracks = () => {\r\n        return playlistTracks.map((track) => (\r\n            <div key={track.track.id} className=\"track-item\">\r\n                <img\r\n                    src={track.track.album.images[0].url}\r\n                    alt={`${track.track.name} Album Cover`}\r\n                    className=\"track-image\"\r\n                />\r\n                <div className=\"track-info\">\r\n                    <div className=\"track-name\">{track.track.name}</div>\r\n                    <div className=\"track-artist\">\r\n                        Artist: {track.track.artists[0].name}\r\n                        {!selectedSongs.includes(track.track.id) && (\r\n                            <button className=\"heart-button\" onClick={() => addToSelectedSongs(track.track.id)}>\r\n                                ❤\r\n                            </button>\r\n                        )}\r\n                        {selectedSongs.includes(track.track.id) && (\r\n                            <button className=\"heart-button\" onClick={() => removeFromSelectedSongs(track.track.id)}>\r\n                                ❤️\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    function addToSelectedSongs(songId) {\r\n        //TODO : call an axios message to save to database\r\n        if (!selectedSongs.includes(songId)) {\r\n            setSelectedSongs([...selectedSongs, songId]);\r\n        }\r\n\r\n        let response = axios.post(\"http://localhost:8080/addToPlaylist\",{\"song\" : {\"songId\" : \"\", \"authorId\" : \"\",\"popularity\": 3},\"username\" : \"user1\", \"playlistId\" : {\"creatorUsername\" : \"\", \"playListName\" : \"\"}})\r\n    }\r\n\r\n    function removeFromSelectedSongs(songId) {\r\n        //TODO : call an axios message to remove from database\r\n        if (selectedSongs.includes(songId)) {\r\n            setSelectedSongs(selectedSongs.filter((id) => id !== songId));\r\n        }\r\n        let response = axios.delete(\"http://localhost:8080/deleteFromPlaylist\",{\"username\" : \"user1\", \"playlistId\" : {\"creatorUsername\" : \"\", \"playListName\" : \"\"}, \"songId\" : \"\"})\r\n\r\n    }\r\n\r\n    const renderAuthorTracks = () => {\r\n        return authorTrack.map((track) => (\r\n            <div key={track.id} className=\"track-item\">\r\n                <img\r\n                    src={track.album.images[0].url}\r\n                    alt={`${track.name} Album Cover`}\r\n                    className=\"track-image\"\r\n                />\r\n                <div className=\"track-info\">\r\n                    <div className=\"track-name\">{track.name}</div>\r\n                    <div className=\"track-artist\">{track.artists[0].name}\r\n                        {!selectedSongs.includes(track.id) && (\r\n                            <button className=\"heart-button\" onClick={() => addToSelectedSongs(track.id)}>\r\n                                ❤\r\n                            </button>\r\n                        )}\r\n                        {selectedSongs.includes(track.id) && (\r\n                            <button className=\"heart-button\" onClick={() => removeFromSelectedSongs(track.id)}>\r\n                                ❤️\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n\r\n\r\n    const getPlaylist = async (e) => {\r\n        e.preventDefault();\r\n        let token = window.localStorage.getItem(\"token\");\r\n        const {data} = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        });\r\n        setPlaylistItems(data.items);\r\n        setPlaylist(true);\r\n        setDisplay(false);\r\n    };\r\n\r\n    const getSongsFromArtist = async (e) => {\r\n        e.preventDefault();\r\n        let token = window.localStorage.getItem(\"token\");\r\n        const {data} = await axios.get(\"https://api.spotify.com/v1/search?type=track&q=\" + inputValue + \"&limit=50\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token,\r\n            }\r\n        });\r\n        console.log(data.tracks.items);\r\n        setAuthorTrack(data.tracks.items);\r\n    };\r\n\r\n    const closeAll = async (e) => {\r\n        e.preventDefault();\r\n        setDisplay(true);\r\n        setSelectedPlaylist(null);\r\n        setSelectedArtistInfo(null);\r\n        setPlaylist(false);\r\n        setSelectedPlaylist(null);\r\n        setShowArtistInfo(false);\r\n        setPlaylistItems([]);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"playlist-container\">\r\n            {!displayPlay && (\r\n                <button className=\"get-playlist-button-close\" onClick={closeAll}>\r\n                    X\r\n                </button>\r\n            )}\r\n            <div>{renderPlaylist()}</div>\r\n            {selectedPlaylist !== null && (\r\n                <div>\r\n                    <h3>Tracks of {selectedPlaylist}</h3>\r\n                    <div>{renderTracks()}</div>\r\n                </div>\r\n            )}\r\n            {displayPlay && (\r\n                <button className=\"get-playlist-button\" onClick={getPlaylist}>\r\n                    GET YOUR PLAYLIST FROM SPOTIFY\r\n                </button>\r\n            )}\r\n\r\n            {displaySearch && (\r\n\r\n                <div>\r\n\r\n                    <label htmlFor=\"textInput\">Enter Text:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"textInput\"\r\n                        value={inputValue}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Type something...\"\r\n                    />\r\n                    <button disabled={inputValue.length == 0} onClick={getSongsFromArtist}>SEARCH</button>\r\n                 \r\n                    {authorTrack !== null && (\r\n                        <div>\r\n                            <h3>Tracks of {selectedPlaylist}</h3>\r\n                            <div>{renderAuthorTracks()}</div>\r\n                        </div>\r\n                    )} </div>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playlist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabijan\\\\Documents\\\\drumre-projekt\\\\front\\\\src\\\\Components\\\\GroupComponent.js\",\n  _s = $RefreshSig$();\nimport Playlist from \"./Playlist\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupComponent() {\n  _s();\n  // TODO : input text to see if a group exists you want to join, or a button to create a group\n  // treba napraviti kad se korisnik ulogira da se ili pridruzi grupi ili napravi novu grupu, sve to se preko axiosa salje u backedn i onda se tamo salje u bazu podataka,\n  // nakon sto uspjesno napravi grupu ili pri druzi se grupi otvara se opcija da vidi svoje playlise i tarckove\n\n  const [seePlaylist, setSeePlaylist] = useState(false);\n  const [seeCreateGroup, setSeeCreateGroup] = useState(false);\n  const [seeEnter, setSeeEnter] = useState(true);\n  function enterAGroup() {\n    //TODO : axios call to backend to see if group exists, if a group exists setSeePlalyist to true\n    let response = axios.post(\"http://localhost:8080/join\", {\n      \"playlistId\": {\n        \"creatorUsername\": \"\",\n        \"playListName\": \"\"\n      },\n      \"username\": \"user1\"\n    });\n    if (response.body == true) {\n      setSeePlaylist(true);\n      //setSeeCreateGroup(false)\n    } else {\n      setSeePlaylist(false);\n      // setSeeCreateGroup(true)\n    }\n\n    setSeeEnter(false);\n  }\n  function createAGroup() {\n    // TODO : axios call to backend to create a group, if a group is created setSeePlalyist to true, send a request with the name of the group and the email of the user\n    //get email from session stroage\n\n    var response = axios.post(\"http://localhost:8080/createPlaylist\", {\n      \"request\": {\n        \"playlistName\": \"playlistNAME\",\n        \"user\": {\n          \"username\": window.localStorage.getItem(\"email\")\n        }\n      }\n    });\n    if (response.body == true) {\n      setSeePlaylist(true);\n    } else if (response.body == false) {\n      setSeePlaylist(false);\n    }\n    let emailOfLoginUser = window.localStorage.getItem(\"email\");\n    setSeeCreateGroup(false);\n    setSeePlaylist(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [seeEnter && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter group name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter a creator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enterAGroup,\n        children: \"Enter a group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 26\n    }, this), \"//TODO : input parameters for creating a group\", seePlaylist && /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this), seeCreateGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter group name you want to create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createAGroup,\n        children: \"CREATE A GROUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 108\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupComponent, \"XH76uKozWwcFWqZKXVgehk42kDY=\");\n_c = GroupComponent;\nexport default GroupComponent;\nvar _c;\n$RefreshReg$(_c, \"GroupComponent\");","map":{"version":3,"names":["Playlist","useState","axios","jsxDEV","_jsxDEV","GroupComponent","_s","seePlaylist","setSeePlaylist","seeCreateGroup","setSeeCreateGroup","seeEnter","setSeeEnter","enterAGroup","response","post","body","createAGroup","window","localStorage","getItem","emailOfLoginUser","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Fabijan/Documents/drumre-projekt/front/src/Components/GroupComponent.js"],"sourcesContent":["import Playlist from \"./Playlist\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction GroupComponent() {\r\n// TODO : input text to see if a group exists you want to join, or a button to create a group\r\n    // treba napraviti kad se korisnik ulogira da se ili pridruzi grupi ili napravi novu grupu, sve to se preko axiosa salje u backedn i onda se tamo salje u bazu podataka,\r\n    // nakon sto uspjesno napravi grupu ili pri druzi se grupi otvara se opcija da vidi svoje playlise i tarckove\r\n\r\n    const [seePlaylist, setSeePlaylist] = useState(false)\r\n    const  [seeCreateGroup, setSeeCreateGroup] = useState(false)\r\n    const [seeEnter, setSeeEnter] = useState(true)\r\n    function enterAGroup() {\r\n        //TODO : axios call to backend to see if group exists, if a group exists setSeePlalyist to true\r\n        let response = axios.post(\"http://localhost:8080/join\",{\"playlistId\" : {\"creatorUsername\" : \"\", \"playListName\" : \"\"}  , \"username\" : \"user1\"});\r\n        if(response.body == true) {\r\n            setSeePlaylist(true)\r\n            //setSeeCreateGroup(false)\r\n\r\n        }else {\r\n            setSeePlaylist(false)\r\n           // setSeeCreateGroup(true)\r\n        }\r\n        setSeeEnter(false)\r\n\r\n    }\r\n\r\n    function createAGroup() {\r\n        // TODO : axios call to backend to create a group, if a group is created setSeePlalyist to true, send a request with the name of the group and the email of the user\r\n        //get email from session stroage\r\n\r\n        var response = axios.post(\"http://localhost:8080/createPlaylist\",{\"request\" : {\"playlistName\":\"playlistNAME\",\"user\" : {\"username\":window.localStorage.getItem(\"email\")}}})\r\n       if(response.body == true) {\r\n              setSeePlaylist(true)\r\n       }else if (response.body == false) {\r\n           setSeePlaylist(false)\r\n       }\r\n\r\n        let emailOfLoginUser = window.localStorage.getItem(\"email\")\r\n        setSeeCreateGroup(false)\r\n        setSeePlaylist(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {seeEnter && <div> <input type=\"text\" placeholder=\"Enter group name\"/>\r\n                <div><input type=\"text\" placeholder=\"Enter a creator\"/></div>\r\n                <button onClick={enterAGroup}>Enter a group</button></div>}\r\n            //TODO : input parameters for creating a group\r\n            {seePlaylist && <Playlist/>}\r\n            {seeCreateGroup && <div><input type=\"text\"  placeholder=\"Enter group name you want to create\"/><button onClick={createAGroup}>CREATE A GROUP</button></div>\r\n            }\r\n        </div>\r\n)\r\n;\r\n}\r\n\r\nexport default GroupComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}